{# This is a jinja2-template-file which is rendered and create the packer.hcl-file #}
# Provider-Plugin-Section
packer {
  required_plugins {
    vsphere = {
      source  = "github.com/hashicorp/vsphere"
      version = "~> 1"
    }
  }
}

{# variable vcenter_username is set in .vsphere-secrets.json on packer-build-host #}
# Variable Declaration Section 
# variable vcenter_username is set in .vsphere-secrets.json on packer-build-host in the installation-directory of packer
variable "vcenter_username" {
  type        = string
  description = "The username to login to the vCenter Server instance."
  sensitive   = true
}

# variable vcenter_username is set in .vsphere-secrets.json on packer-build-host in the installation-directory of packer
variable "vcenter_password" {
  type        = string
  description = "The password for the login to the vCenter Server instance."
  sensitive   = true
}

# VM Section
source "vsphere-iso" "{{ vm_template_name }}" {
{# The variables username and password should be set in the .vsphere-secrets.json #} 
  # vCenter specific configuration
  username             = var.vcenter_username {# variable is set in .vsphere-secrets.json on packer-build-host in Packer-Installation-Directory #}

  password             = var.vcenter_password {# variable is set in .vsphere-secrets.json on packer-build-host in Packer-Installation-Directory #}

  insecure_connection  = "true"
  vcenter_server       = "{{vcenter_fqdn}}"
  cluster              = "{{vcenter_cluster}}"
  datacenter           = "{{vcenter_datacenter}}"
  datastore            = "{{vcenter_datastore}}"
  folder               = "{{vcenter_templatefolder}}"
  guest_os_type        = "{{vm_guestostype}}"
  host                 = "{{vcenter_esxhost}}"
  iso_paths            = ["{{vcenter_iso_path}}"]

  # VM specific parameters
  vm_name              = "template-rocky-{{packer_build_version}}"
  notes                = "Template for RockyLinux version {{packer_build_version}}"
  CPU_hot_plug         = true
  CPUs                 = {{vm_template_cpu}}
  RAM                  = {{vm_template_ram}}
  RAM_hot_plug         = true
  disk_controller_type = ["pvscsi"]
  shutdown_command     = "/sbin/halt -h -p"
  ssh_password         = "{{vm_root_userpassword}}"
  ssh_username         = "{{vm_root_user}}"
  boot_command         = ["<up><tab> text ip={{vm_template_ip}}::{{vm_template_gateway}}:{{vm_template_subnet}}:{{vm_template_hostname}}:ens192:none ipv6.disable=1 nameserver={{vm_template_dns_server_ip}} inst.ks=http://{{packer_builder_ip}}/{{kickstart_filename}}<enter><wait><enter>"]
  convert_to_template  = true
  create_snapshot      = false
  
  # Network Section of the VM
  network_adapters {
    network            = "{{vcenter_network}}"
    network_card       = "vmxnet3"
  }

  # Storage Section of the VM
  storage {
    disk_size             = {{vm_template_disk}}
    disk_thin_provisioned = true
  }
}

# Build Section
# You can write shell or bash scripts in the requirements.sh
# This script will be executed after the installation
build {
  sources = ["source.vsphere-iso.{{ vm_template_name }}"]

  provisioner "shell" { 
    execute_command     = "bash {#'{{ .Path }}'#}"
    expect_disconnect   = true
    script              = "{{packer_scripts_directory}}requirements.sh"
  }
}
